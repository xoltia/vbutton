package vbutton

import (
    "fmt"
)

type IndexModel struct {
    Clips    []*VoiceClip
    Tags     []string
    VTubers  []string
    Agencies []string
}

script playClip(clip *VoiceClip) {
    const clipElement = document.getElementById("clip-" + clip.ID);
    const playButton = clipElement.querySelector("button");

    if (Object.keys(window).includes(`audioSource${clip.ID}`)) {
        window[`audioSource${clip.ID}`].pause();
        playButton.textContent = "Play";
        playButton.classList.remove("bg-pink-400");
        playButton.classList.add("bg-pink-300");
        delete window[`audioSource${clip.ID}`];
        return;
    }

    const src = "/storage/" + clip.ID + ".ogg";
    const audioSource = new Audio(src);

    playButton.textContent = "停止";
    playButton.classList.remove("bg-pink-300");
    playButton.classList.add("bg-pink-400");

    window[`audioSource${clip.ID}`] = audioSource;

    audioSource.addEventListener("ended", function() {
        playButton.textContent = "Play";
        playButton.classList.remove("bg-pink-400");
        playButton.classList.add("bg-pink-300");

        delete window[`audioSource${clip.ID}`];
    });


    audioSource.play();
}

templ clipPlayer(clip *VoiceClip) {
    <div class="flex flex-row items-center border-b-2 border-neutral-700 pb-4"
        id={fmt.Sprintf("clip-%d", clip.ID)}>
        <div class="flex-none mr-4">
            <button class="bg-pink-300 text-white font-bold py-2 px-4 rounded-fill hover:bg-pink-400 shadow" onclick={playClip(clip)}>
                Play
            </button>
        </div>
        <div class="flex-grow">
            <div class="text-lg font-bold">{clip.Title}</div>
            
            if clip.AgencyName.Valid {
                <div class="text-sm">{clip.VTuberName}・{clip.AgencyName.String}</div>
            } else {
                <div class="text-sm">{clip.VTuberName}</div>
            }
        </div>
    </div>
}

templ searchSection(model IndexModel) {
    <div class="mt-4">
        <label for="query" class="sr-only">検索</label>
        <input type="text" id="query" name="query"
            class="bg-neutral-700
                   focus:shadow-outline border-0
                   rounded py-2 px-4
                   block w-full appearance-none leading-normal"
            placeholder="検索"
        />
    </div>

    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">タグ</h2>
        for _, tag := range model.Tags {
            <a href={templ.SafeURL("/?t=" + tag)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{tag}</a>
        }
    </div>
    
    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">タレント</h2>
        for _, vtuber := range model.VTubers {
            <a href={templ.SafeURL("/?v=" + vtuber)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{vtuber}</a>
        }
    </div>


    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">所属事務所</h2>
        for _, agency := range model.Agencies {
            <a href={templ.SafeURL("/?a=" + agency)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{agency}</a>
        }
    </div>
}

templ audioSection(model IndexModel) {
    <h2 class="text-xl font-bold">最近のクリップ</h2>
    <div class="mt-4 space-y-4">
        for _, clip := range model.Clips {
            @clipPlayer(clip)
        }
    </div>
}

templ indexPage(model IndexModel) {
    @page("") {
        <div class="flex flex-col md:flex-row md:items-start items-center max-w-5xl mx-auto py-8 px-4">
            <div class="md:w-1/3 w-full md:mr-4 md:p-8 md:bg-neutral-800 md:rounded md:shadow mb-8">
                @searchSection(model)
            </div>
            <div class="md:flex-grow">
                @audioSection(model)
            </div>
        </div>
    }
}