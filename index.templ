package vbutton

import (
    "fmt"
)

type IndexModel struct {
    Clips    []*VoiceClip
    Tags     []string
    VTubers  []string
    Agencies []string
    CurrentTag string
    CurrentVTuber string
    CurrentAgency string
    CurrentSearch string
}

script playClip(clip *VoiceClip) {
    const clipElement = document.getElementById("clip-" + clip.ID);
    const playButton = clipElement.querySelector("button");

    function resetButton() {
        playButton.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" height="16" width="12" viewBox="0 0 384 512" class="mr-2">
                <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.-->
                <path fill="currentColor" d="M48 432L336 256 48 80l0 352zM24.5 38.1C39.7 29.6 58.2 30 73 39L361 215c14.3 8.7 23 24.2 23 41s-8.7 32.2-23 41L73 473c-14.8 9.1-33.4 9.4-48.5 .9S0 449.4 0 432V80C0 62.6 9.4 46.6 24.5 38.1z"/>
            </svg>
            Play
        `;

        delete window[`audioSource${clip.ID}`];
    }

    if (Object.keys(window).includes(`audioSource${clip.ID}`)) {
        window[`audioSource${clip.ID}`].pause();
        resetButton();
        return;
    }

    const src = "/storage/" + clip.ID + ".ogg";
    const audioSource = new Audio(src);

    playButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" height="16" width="10" viewBox="0 0 320 512" class="mr-2">
            <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.-->
            <path fill="currentColor" d="M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z"/>
        </svg>
    停止`;

    window[`audioSource${clip.ID}`] = audioSource;
    audioSource.addEventListener("ended", resetButton);
    audioSource.play();
}

templ clipPlayer(clip *VoiceClip) {
    <div class="flex flex-row items-center border-b-2 border-neutral-700 pb-4"
        id={fmt.Sprintf("clip-%d", clip.ID)}>
        <div class="flex-none mr-4">
            <button class="bg-pink-300 text-white font-bold py-2 px-4 rounded-fill hover:bg-pink-400 shadow flex items-center" onclick={playClip(clip)}>
                <svg xmlns="http://www.w3.org/2000/svg" height="16" width="12" viewBox="0 0 384 512" class="mr-2">
                    <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.-->
                    <path fill="currentColor" d="M48 432L336 256 48 80l0 352zM24.5 38.1C39.7 29.6 58.2 30 73 39L361 215c14.3 8.7 23 24.2 23 41s-8.7 32.2-23 41L73 473c-14.8 9.1-33.4 9.4-48.5 .9S0 449.4 0 432V80C0 62.6 9.4 46.6 24.5 38.1z"/>
                </svg>
                Play
            </button>
        </div>
        <div class="flex-grow">
            <div class="text-lg font-bold">{clip.Title}</div>
            
            if clip.AgencyName.Valid {
                <div class="text-sm">{clip.VTuberName}・{clip.AgencyName.String}</div>
            } else {
                <div class="text-sm">{clip.VTuberName}</div>
            }
        </div>
    </div>
}

templ searchSection(model IndexModel) {
    if model.CurrentSearch != "" {
        <h3 class="mb-2 font-bold">検索: {model.CurrentSearch}</h3>
        <a href="/" class="inline-block text-sm text-pink-300 mb-3">← 検索をクリア</a>
    }

    if model.CurrentTag != "" {
        <h3 class="mb-2 font-bold">タグ: {model.CurrentTag}</h3>
        <a href="/" class="inline-block text-sm text-pink-300 mb-3">← 検索をクリア</a>
    }

    if model.CurrentVTuber != "" {
        <h3 class="mb-2 font-bold">人物: {model.CurrentVTuber}</h3>
        <a href="/" class="inline-block text-sm text-pink-300 mb-3">← 検索をクリア</a>
    }

    if model.CurrentAgency != "" {
        <h3 class="mb-2 font-bold">所属事務所: {model.CurrentAgency}</h3>
        <a href="/" class="inline-block text-sm text-pink-300 mb-3">← 検索をクリア</a>
    }

    <form method="GET" action="/">
        <label for="query" class="sr-only">検索</label>
        <input type="text" id="query" name="q"
            class="bg-neutral-700
                   focus:shadow-outline border-0
                   rounded py-2 px-4
                   block w-full appearance-none leading-normal"
            placeholder="検索"
        />
        <button type="submit" class="hidden">検索</button>
    </form>

    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">タグ</h2>
        for _, tag := range model.Tags {
            <a href={templ.SafeURL("/?t=" + tag)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{tag}</a>
        }
    </div>
    
    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">人物</h2>
        for _, vtuber := range model.VTubers {
            <a href={templ.SafeURL("/?v=" + vtuber)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{vtuber}</a>
        }
    </div>


    <div class="mt-4">
        <h2 class="text-xl font-bold border-b-2 border-pink-200 pb-1 mb-1">所属事務所</h2>
        for _, agency := range model.Agencies {
            <a href={templ.SafeURL("/?a=" + agency)} class="whitespace-pre-wrap mr-3 mb-3 border-b-2 border-transparent hover:border-pink-300 hover:font-bold">{agency}</a>
        }
    </div>
}

templ audioSection(title string, model IndexModel) {
    <h2 class="text-xl font-bold">{title}</h2>
    <div class="mt-4 space-y-4">
        if len(model.Clips) == 0 {
            <div class="text-neutral-400">クリップがありません。</div>
        }

        for _, clip := range model.Clips {
            @clipPlayer(clip)
        }
    </div>
}

templ indexPage(model IndexModel) {
    @page("") {
        <div class="flex flex-col md:flex-row md:items-start items-center max-w-5xl mx-auto py-8 px-4">
            <div class="md:w-1/3 w-full md:mr-4 md:p-8 md:bg-neutral-800 md:rounded md:shadow mb-8">
                @searchSection(model)
            </div>
            <div class="md:flex-grow w-full md:w-auto">
                if model.CurrentSearch != "" || model.CurrentTag != "" || model.CurrentVTuber != "" || model.CurrentAgency != "" {
                    @audioSection("検索結果", model)
                } else {
                    @audioSection("最近のクリップ", model)
                }
            </div>
        </div>
    }
}